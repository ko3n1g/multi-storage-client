[build-system]
requires = [
    "poetry-core~=2.0"
]
build-backend = "poetry.core.masonry.api"

[project]
name = "multi-storage-client"
version = "0.21.0"
description = "Unified high-performance Python client for object and file stores."
authors = [
    { name = "NVIDIA Multi-Storage Client Team" }
]
license = "Apache-2.0"
readme = "README.md"
requires-python = "~=3.9"
dependencies = [
    "filelock~=3.14",
    "jmespath~=1.0.1",
    "jsonschema~=4.0",
    "python-dateutil~=2.8",
    "pyyaml~=6.0.1",
    "opentelemetry-api~=1.24",
    "xattr~=1.1.4",
    "wcmatch~=10.0",
    "tqdm~=4.27",
]

[project.urls]
source = "https://github.com/NVIDIA/multi-storage-client"
documentation = "https://nvidia.github.io/multi-storage-client/"

[project.optional-dependencies]
# Observability.
observability-otel = [
    "opentelemetry-sdk~=1.24",
    "opentelemetry-exporter-otlp-proto-http~=1.24",
    "datasketches~=5.1"
]

msal = [
    "msal~=1.31.1"
]

# Storage providers.
aistore = [
    "aistore~=1.13"
]
azure-storage-blob = [
    "azure-storage-blob~=12.17"
]
boto3 = [
    "boto3~=1.36"
]
google-cloud-storage = [
    "google-cloud-storage~=3.0"
]
oci = [
    "oci~=2.69.0"
]

# Higher-level libraries.
fsspec = [
    "fsspec>=2023.9.0"
]
numpy = [
    "numpy~=2.0"
]
torch = [
    "torch~=2.6"
]
xarray = [
    "xarray>=2024.07.0"
]
zarr = [
    "zarr~=2.15"
]

[dependency-groups]
dev = [
    "pip-licenses~=5.0",
    "types-PyYAML~=6.0.1",
    "types-python-dateutil~=2.8",
    "types-requests~=2.25",
    "pytest~=8.3.4",
    "pytest-asyncio~=0.25.3",
    "pytest-cov~=6.0.0",
    "pytest-forked~=1.6",
    "pytest-stress~=1.0.1",
    "pytest-xdist[psutil]~=3.6.1",
    "coverage[toml]~=7.6.12",
    "sphinx~=7.4.7",
    "sphinx-copybutton~=0.5.1",
    "sphinx-pyproject~=0.3",
    "furo>=2024.8.6"
]

[project.scripts]
msc-benchmark = "multistorageclient.commands.msc_benchmark:main"
msc = "multistorageclient.commands.cli.main:main"

[project.entry-points."fsspec.specs"]
msc = "multistorageclient.contrib.async_fs.MultiStorageAsyncFileSystem"

[tool.coverage.run]
branch = true
data_file = ".reports/unit/.coverage"
parallel = true
source = [
    "src"
]

[tool.coverage.html]
directory = ".reports/unit/coverage"

[tool.coverage.xml]
output = ".reports/unit/coverage.xml"

[tool.pip-licenses]
format = "markdown"
order = "license"
output-file = ".licenses.md"
with-urls = true

[tool.poetry]
packages = [
    { include = "multistorageclient", from = "src" }
]

[tool.pyright]
include = [
    "src",
    "tests"
]

[tool.pytest.ini_options]
addopts = [
    "--import-mode=importlib"
]
asyncio_default_fixture_loop_scope = "function"

pythonpath = [
    "tests"
]
testpaths = [
    "tests/test_multistorageclient/unit"
]

[tool.ruff]
indent-width = 4
line-length = 120

[tool.ruff.format]
docstring-code-format = true
indent-style = "space"

[tool.ruff.lint]
extend-select = [
    "I"
]
fixable = [
    "ALL"
]
unfixable = []

[tool.uv]
python-downloads = "never"
python-preference = "only-system"
resolution = "lowest-direct"
